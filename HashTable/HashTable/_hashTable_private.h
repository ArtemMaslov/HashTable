#ifndef HASH_TABLE_PRIVATE_H
#define HASH_TABLE_PRIVATE_H

#include "HashTable.h"

///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***\\\
///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***\\\

/**
 * @brief Проверяет очищена, ли структура перед вызовом конструктора.
 * 
 * @param table Указатель на таблицу.
 * 
 * @return HASH_TABLE_ERR_INIT, если таблица не очищена. Иначе HASH_TABLE_ERR_NO_ERRORS
*/
int HashTableVerifyInit(const HashTable* table);

///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***\\\
///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***\\\

/**
 * @brief Обёртка для вычисления хеш-функции.
 * 
 * Делит по модулю значение хеш-функции на размер хеш-таблицы.
 * 
 * @param table   Указатель на таблицу.
 * @param element Указатель на элемент таблицы.
 * 
 * @return Индекс списка.
*/
size_t CalcHash(const HashTable* table, const ListType* element);

///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***\\\
///***///***///---\\\***\\\***\\\___///***___***\\\___///***///***///---\\\***\\\***\\\

#endif // !HASH_TABLE_PRIVATE_H