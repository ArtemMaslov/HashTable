; Listing generated by Microsoft (R) Optimizing Compiler Version 19.31.31105.0 

	TITLE	D:\Language C\HashTable\HashTable\Release\HashTable_Data.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?HashTableClearLists@@YAXPAUHashTable@@@Z	; HashTableClearLists
EXTRN	?ClearList@@YAXPAUList@@@Z:PROC			; ClearList
; Function compile flags: /Ogtp
; File D:\Language C\HashTable\HashTable\HashTable\HashTable_Data.cpp
;	COMDAT ?HashTableClearLists@@YAXPAUHashTable@@@Z
_TEXT	SEGMENT
_table$ = 8						; size = 4
?HashTableClearLists@@YAXPAUHashTable@@@Z PROC		; HashTableClearLists, COMDAT

; 14   : {

	push	ebp
	mov	ebp, esp
	push	ebx

; 15   : 	LOG_HASH_TABLE_TRACE_FUNC_1;
; 16   : 
; 17   : 	assert(table);
; 18   : 
; 19   : 	HASH_TABLE_ASSERT_STATUS;
; 20   : 
; 21   : 	//***\\---//***\\-----//***\\---//***\\-----//*****\\-----//***\\---//***\\-----//***\\---//***\\
; 22   : 
; 23   : 	const size_t listCount = table->ListCount;

	mov	ebx, DWORD PTR _table$[ebp]
	push	edi
	mov	edi, DWORD PTR [ebx+4]

; 24   : 
; 25   : 	for (size_t st = 0; st < listCount; st++)

	test	edi, edi
	je	SHORT $LN3@HashTableC

; 15   : 	LOG_HASH_TABLE_TRACE_FUNC_1;
; 16   : 
; 17   : 	assert(table);
; 18   : 
; 19   : 	HASH_TABLE_ASSERT_STATUS;
; 20   : 
; 21   : 	//***\\---//***\\-----//***\\---//***\\-----//*****\\-----//***\\---//***\\-----//***\\---//***\\
; 22   : 
; 23   : 	const size_t listCount = table->ListCount;

	push	esi
	xor	esi, esi
$LL4@HashTableC:

; 26   : 	{
; 27   : 		ClearList(table->Lists + st);

	mov	eax, DWORD PTR [ebx+8]
	add	eax, esi
	push	eax
	call	?ClearList@@YAXPAUList@@@Z		; ClearList
	add	esp, 4
	add	esi, 32					; 00000020H
	sub	edi, 1
	jne	SHORT $LL4@HashTableC
	pop	esi
$LN3@HashTableC:
	pop	edi

; 28   : 	}
; 29   : }

	pop	ebx
	pop	ebp
	ret	0
?HashTableClearLists@@YAXPAUHashTable@@@Z ENDP		; HashTableClearLists
_TEXT	ENDS
END
