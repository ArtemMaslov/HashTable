; Listing generated by Microsoft (R) Optimizing Compiler Version 19.31.31105.0 

	TITLE	D:\Language C\HashTable\HashTable\Release\FileIO.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?DirectoryExist@@YA_NPBD@Z			; DirectoryExist
PUBLIC	?GetFileSize@@YAIPAU_iobuf@@@Z			; GetFileSize
EXTRN	__imp__GetFileAttributesA@4:PROC
EXTRN	__imp__fseek:PROC
EXTRN	__imp__ftell:PROC
; Function compile flags: /Ogtp
; File D:\Language C\HashTable\HashTable\FileIO.cpp
;	COMDAT ?GetFileSize@@YAIPAU_iobuf@@@Z
_TEXT	SEGMENT
_file$ = 8						; size = 4
?GetFileSize@@YAIPAU_iobuf@@@Z PROC			; GetFileSize, COMDAT

; 24   : {

	push	ebp
	mov	ebp, esp
	push	ebx

; 25   : 	assert(file);
; 26   : 
; 27   : 	fseek(file, 0, SEEK_END);

	mov	ebx, DWORD PTR _file$[ebp]
	push	esi
	push	2
	push	0
	push	ebx
	call	DWORD PTR __imp__fseek

; 28   : 	size_t fileSize = ftell(file);

	push	ebx
	call	DWORD PTR __imp__ftell

; 29   : 	fseek(file, 0, SEEK_SET);

	push	0
	push	0
	push	ebx
	mov	esi, eax
	call	DWORD PTR __imp__fseek
	add	esp, 28					; 0000001cH

; 30   : 
; 31   : 	return fileSize;

	mov	eax, esi
	pop	esi
	pop	ebx

; 32   : }

	pop	ebp
	ret	0
?GetFileSize@@YAIPAU_iobuf@@@Z ENDP			; GetFileSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Language C\HashTable\HashTable\FileIO.cpp
;	COMDAT ?DirectoryExist@@YA_NPBD@Z
_TEXT	SEGMENT
_path$ = 8						; size = 4
?DirectoryExist@@YA_NPBD@Z PROC				; DirectoryExist, COMDAT

; 14   : {

	push	ebp
	mov	ebp, esp

; 15   : 	DWORD attr = GetFileAttributesA(path);

	push	DWORD PTR _path$[ebp]
	call	DWORD PTR __imp__GetFileAttributesA@4

; 16   : 
; 17   : 	if (attr == INVALID_FILE_ATTRIBUTES)

	cmp	eax, -1
	jne	SHORT $LN2@DirectoryE

; 18   : 		return false;

	xor	al, al

; 21   : }

	pop	ebp
	ret	0
$LN2@DirectoryE:

; 19   : 
; 20   : 	return (attr & FILE_ATTRIBUTE_DIRECTORY);

	shr	eax, 4
	and	al, 1

; 21   : }

	pop	ebp
	ret	0
?DirectoryExist@@YA_NPBD@Z ENDP				; DirectoryExist
_TEXT	ENDS
END
